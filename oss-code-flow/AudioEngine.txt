代码流程：
cpp_android_spec下面的代码要重点研究
从哪里进到RootTests()
1. onCreate()<--Cocos2dxActivity
  2. onLoadNativeLibraries()<--Cocos2dxActivity
  2. init()<--Cocos2dxActivity

runThisTest()
  new TestController()
    new RootTests()
  setCurrTestSuite()<--TestController.cpp

RootTests()
  init()<--AudioControlTest.cpp
    create(play)<--TextButton
    play2d()<--AudioEngine.cpp
    setFinishCallback()<--AudioEngine.cpp

#code flow(play assets/background.mp3)
1. play2d()
  2. lazyInit()
  2. new AudioEngineImpl()
  2. init()<--AudioEngineImpl.cpp
    3. slCreateEngine() //create engine
    3. Realize() //realize the engine
    3. CreateOutputMix() //realize the output mix
    3. new AudioPlayerProvider()
  2. _audioEngineImpl->play2d()<--AudioEngineImpl.cpp
    3. getAudioPlayer()<--AudioPlayerProvider.cpp
      4. getFileInfo()
      4. isSmallFile()
      4. preloadEffect()<--AudioPlayerProvider.cpp
        5. createAudioDecoder()<--AudioDecoderProvider.cpp
          6. new AudioDecoderMp3()
          6. init()<--AudioDecoderMp3()
        5. start()<--AudioDecoderMp3()
          6. decodeToPcm()
            7. decodeMP3()<--mp3reader.cpp
          6. resample()
          6. interleave()
      4. obtainPcmAudioPlayer()<--AudioPlayerProvider.cpp
        5. new PcmAudioPlayer()
        5. prepare()<--PcmAudioPlayer.cpp
      4. preloadEffect() //if it is small file
        5. AudioDecoderProvider::createAudioDecoder()
          6. decoder = new AudioDecoderOgg() //if extension is ogg
          6. decoder = new AudioDecoderMp3() //if extension is mp3
          6. decoder = new AudioDecoderWav() //if extension is wav
          6. new AudioDecoderSLES() //others
          6. decoder->init()
      4. obtainPcmAudioPlayer() //if pcm data valid
      4. createUrlAudioPlayer() //if it is not small file
    3. player->setLoop() //设置循环
    3. player->play() //开始播放
  2. audioPathIDMap[filePath].push_back(ret)
1. pause()
  2. pause()<--AudioEngineImpl.cpp
    3. pause()<--IAudioPlayer.cpp
      4. pause()<--UrlAudioPlayer.cpp
        5. SetPlayState(pause)
1. resume()
  2. resume()<--AudioEngineImpl.cpp
    3. resume()<--IAudioPlayer.cpp
1. stop()
  2. stop()<--AudioEngineImpl.cpp
    3. stop()<--IAudioPlayer.cpp
1. end()